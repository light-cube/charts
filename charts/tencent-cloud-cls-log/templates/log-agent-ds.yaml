apiVersion: v1
kind: ServiceAccount
metadata:
  name: tke-log-agent
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tke-log-agent
rules:
- apiGroups:
    - cls.cloud.tencent.com
  resources:
    - logconfigs
  verbs:
    - get
    - list
    - watch
    - patch
- apiGroups:
    - ""
  resources:
    - pods
    - namespaces
    - nodes
    - configmaps
    - persistentvolumeclaims
    - persistentvolumes
  verbs:
    - list
    - watch
    - get
- apiGroups:
    - storage.k8s.io
  resources:
    - storageclasses
  verbs:
    - get
- apiGroups:
    - apps
  resources:
    - replicasets
    - deployments
    - statefulsets
    - daemonsets
  verbs:
    - get
    - list
    - watch
    - update
- apiGroups:
    - batch
  resources:
    - jobs
    - cronjobs
  verbs:
    - get
    - list
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tke-log-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tke-log-agent
subjects:
  - kind: ServiceAccount
    name: tke-log-agent
    namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tke-log-agent
  namespace: {{ .Release.Namespace }}
  labels:
    {{ if .Values.label }}
    {{- range $key, $val := .Values.label }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: tke-log-agent
  template:
    metadata:
      labels:
        app: tke-log-agent
        {{ if .Values.label }}
        {{- range $key, $val := .Values.label }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if eq (toString .Values.Master) "false" }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      {{- end }}
      containers:
        - args:
            - --cred-sources=$(CRED_SOURCES)
            {{ if eq .Values.Certificate.Type "configmap" }}
            - --cred-config-map=cls-credential
            {{ end }}
            - --namespace={{ .Release.Namespace }}
            - --loglistener-config=/usr/local/loglistener/etc/loglistener.conf
          command:
            - /log-agent
          env:
            - name: CRED_SOURCES
              value: {{ .Values.Certificate.Type }}
            - name: CLS_HOST
              value: {{ .Values.Endpoint }}
            - name: IS_PERSONAL_KUBE
              value: "true"
            - name: TKE_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: cls-k8s
                  key: cluster_id
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: {{ .Values.LogAgentImage.Repository }}:{{ .Values.LogAgentImage.Tag }}
          imagePullPolicy: Always
          name: log-agent
          resources:
            {{- toYaml .Values.logAgentResources | nindent 12 }}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/localtime
              name: tz
            - mountPath: /var/log/tke-log-agent
              name: log-agent-root
            - mountPath: /rootfs
              mountPropagation: HostToContainer
              name: host-root
            - mountPath: /usr/local/loglistener/etc
              name: loglistener-etc
            - mountPath: /var/log/containers
              name: var-log-contaienrs
            - mountPath: /var/log/pods
              name: var-log-pods
            - mountPath: /etc/docker
              name: docker-conf
            - mountPath: /var/run
              name: docker-host
            - mountPath: /run/containerd
              mountPropagation: HostToContainer
              name: containerd-state
            - mountPath: {{ .Values.DockerRoot }}
              name: docker-data-root
            - mountPath: /var/lib/kubelet
              mountPropagation: HostToContainer
              name: kubelet-root
        - image: {{ .Values.LoglistenerImage.Repository }}:{{ .Values.LoglistenerImage.Tag }}
          imagePullPolicy: Always
          name: loglistener
          resources:
            {{- toYaml .Values.loglistenerResources | nindent 12 }}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/localtime
              name: tz
            - mountPath: /var/log/tke-log-agent
              name: log-agent-root
            - mountPath: /rootfs
              mountPropagation: HostToContainer
              name: host-root
            - mountPath: /usr/local/loglistener/etc
              name: loglistener-etc
            - mountPath: /usr/local/loglistener/data
              name: loglistener-data
            - mountPath: /var/log/containers
              name: var-log-contaienrs
            - mountPath: /var/log/pods
              name: var-log-pods
            - mountPath: /run/containerd
              mountPropagation: HostToContainer
              name: containerd-state
            - mountPath: {{ .Values.DockerRoot }}
              name: docker-data-root
            - mountPath: /var/lib/kubelet
              mountPropagation: HostToContainer
              name: kubelet-root
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: tke-log-agent
      serviceAccountName: tke-log-agent
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: tz
        - hostPath:
            path: /var/log/tke-log-agent
            type: ""
          name: log-agent-root
        - hostPath:
            path: /
            type: ""
          name: host-root
        - emptyDir: {}
          name: loglistener-etc
        - hostPath:
            path: /usr/local/loglistener/data
            type: ""
          name: loglistener-data
        - hostPath:
            path: /var/log/containers
            type: ""
          name: var-log-contaienrs
        - hostPath:
            path: /var/log/pods
            type: ""
          name: var-log-pods
        - hostPath:
            path: /var/run
            type: ""
          name: docker-host
        - hostPath:
            path: /etc/docker
            type: ""
          name: docker-conf
        - hostPath:
            path: {{ .Values.DockerRoot }}
            type: ""
          name: docker-data-root
        - hostPath:
            path: /run/containerd
            type: ""
          name: containerd-state
        - hostPath:
            path: /var/lib/kubelet
            type: ""
          name: kubelet-root
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
